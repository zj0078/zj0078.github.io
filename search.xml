<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PG_DBA_运维手册</title>
      <link href="/2024/07/07/PG-DBA-%E8%BF%90%E7%BB%B4%E6%89%8B%E5%86%8C/"/>
      <url>/2024/07/07/PG-DBA-%E8%BF%90%E7%BB%B4%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style><h1 id="PG-DBA-运维手册"><a href="#PG-DBA-运维手册" class="headerlink" title="PG_DBA_运维手册"></a>PG_DBA_运维手册</h1><h3 id="查看database的owner"><a href="#查看database的owner" class="headerlink" title="查看database的owner"></a>查看database的owner</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select datname, usename as owner from pg_database left join pg_user on usesysid = datdba;</span><br></pre></td></tr></table></figure><h3 id="查看可见SCHEMA"><a href="#查看可见SCHEMA" class="headerlink" title="查看可见SCHEMA"></a>查看可见SCHEMA</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from information_schema.schemata;</span><br></pre></td></tr></table></figure><h3 id="查看表膨胀（对所有表进行膨胀率排序），取前10个"><a href="#查看表膨胀（对所有表进行膨胀率排序），取前10个" class="headerlink" title="查看表膨胀（对所有表进行膨胀率排序），取前10个"></a>查看表膨胀（对所有表进行膨胀率排序），取前10个</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    schemaname||&#x27;.&#x27;||relname as table_name,</span><br><span class="line">    pg_size_pretty(pg_relation_size(schemaname||&#x27;.&#x27;||relname)) as table_size,</span><br><span class="line">    n_dead_tup,</span><br><span class="line">    n_live_tup,</span><br><span class="line">    round(n_dead_tup * 100 / (n_live_tup + n_dead_tup),2) AS dead_tup_ratio</span><br><span class="line">FROM</span><br><span class="line">    pg_stat_all_tables</span><br><span class="line">WHERE</span><br><span class="line">    n_dead_tup &gt;= 1000</span><br><span class="line">andschemaname in (&#x27;base&#x27;,&#x27;workspace&#x27;,&#x27;permission&#x27;,&#x27;process&#x27;,&#x27;form&#x27;,&#x27;pipeline&#x27;)    </span><br><span class="line">ORDER BY dead_tup_ratio DESC</span><br><span class="line">LIMIT 10;</span><br></pre></td></tr></table></figure><h3 id="表膨胀处理"><a href="#表膨胀处理" class="headerlink" title="表膨胀处理"></a>表膨胀处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">VACUUM (VERBOSE, ANALYZE)  表明，不锁表，不影响业务使用</span><br><span class="line"></span><br><span class="line">VACUUM ( FULL,VERBOSE ) 表名称 ，注意会锁表，连查询都不可以</span><br></pre></td></tr></table></figure><h3 id="设置序列catche-1-无缓存-每个进程取值就连续了"><a href="#设置序列catche-1-无缓存-每个进程取值就连续了" class="headerlink" title="设置序列catche 1 (无缓存,每个进程取值就连续了)"></a>设置序列catche 1 (无缓存,每个进程取值就连续了)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select   &#x27;alter sequence &#x27;|| sequence_name|| &#x27; cache 1 ;&#x27;</span><br><span class="line"> from information_schema.sequences where sequence_schema != &#x27;public&#x27;</span><br></pre></td></tr></table></figure><h1 id="查看性能sql"><a href="#查看性能sql" class="headerlink" title="查看性能sql"></a>查看性能sql</h1><h3 id="查看正在执行的sql-长事务（top-sql）"><a href="#查看正在执行的sql-长事务（top-sql）" class="headerlink" title="查看正在执行的sql,长事务（top sql）"></a>查看正在执行的sql,长事务（top sql）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">select datname,</span><br><span class="line">       usename,</span><br><span class="line">       client_addr,</span><br><span class="line">       application_name,</span><br><span class="line">       state,</span><br><span class="line">       backend_start,</span><br><span class="line">       xact_start,</span><br><span class="line">       xact_stay,</span><br><span class="line">       query_start,</span><br><span class="line">       query_stay,</span><br><span class="line">   now() - query_start AS Duration, </span><br><span class="line">       replace(query, chr(10), &#x27; &#x27;) as query</span><br><span class="line">from</span><br><span class="line">  (select pgsa.datname as datname,</span><br><span class="line">          pgsa.usename as usename,</span><br><span class="line">          pgsa.client_addr client_addr,</span><br><span class="line">          pgsa.application_name as application_name,</span><br><span class="line">          pgsa.state as state,</span><br><span class="line">          pgsa.backend_start as backend_start,</span><br><span class="line">          pgsa.xact_start as xact_start,</span><br><span class="line">          extract(epoch</span><br><span class="line">                  from (now() - pgsa.xact_start)) as xact_stay,</span><br><span class="line">          pgsa.query_start as query_start,</span><br><span class="line">          extract(epoch</span><br><span class="line">                  from (now() - pgsa.query_start)) as query_stay,</span><br><span class="line">          pgsa.query as query</span><br><span class="line">   from pg_stat_activity as pgsa</span><br><span class="line">   where pgsa.state != &#x27;idle&#x27;</span><br><span class="line">     and pgsa.state != &#x27;idle in transaction&#x27;</span><br><span class="line">     and pgsa.state != &#x27;idle in transaction (aborted)&#x27;</span><br><span class="line"> and usename=&#x27;datalink&#x27;</span><br><span class="line">--and (now() - query_start) &gt; interval &#x27;10 seconds&#x27;</span><br><span class="line"> ) idleconnections</span><br><span class="line">order by query_stay desc</span><br><span class="line">limit 5;</span><br></pre></td></tr></table></figure><h3 id="查看之前执行的sql"><a href="#查看之前执行的sql" class="headerlink" title="查看之前执行的sql"></a>查看之前执行的sql</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">  procpid, </span><br><span class="line">  start, </span><br><span class="line">  now() - start AS lap, </span><br><span class="line">  current_query </span><br><span class="line">FROM </span><br><span class="line">  (SELECT </span><br><span class="line">    backendid, </span><br><span class="line">    pg_stat_get_backend_pid(S.backendid) AS procpid, </span><br><span class="line">    pg_stat_get_backend_activity_start(S.backendid) AS start, </span><br><span class="line">    pg_stat_get_backend_activity(S.backendid) AS current_query </span><br><span class="line">  FROM </span><br><span class="line">    (SELECT pg_stat_get_backend_idset() AS backendid) AS S </span><br><span class="line">  ) AS S </span><br><span class="line">WHERE </span><br><span class="line">  current_query &lt;&gt; &#x27;&lt;IDLE&gt;&#x27; </span><br><span class="line">ORDER BY </span><br><span class="line">  lap DESC;</span><br></pre></td></tr></table></figure><p> procpid：进程id ,<br> 强制结束<br>      SELECT pg_cancel_backend(进程id)   –取消后台操作;<br>     SELECT pg_terminate_backend(PID)   –中断session;<br>start：进程开始时间<br>lap：经过时间<br>current_query：执行中的sql</p><p>慢SQL、TOP SQL优化示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">begin;  </span><br><span class="line">set local lock_timeout=&#x27;1s&#x27;;  </span><br><span class="line">set local statement_timeout=0;  </span><br><span class="line">explain (analyze,verbose,timing,costs,buffers,timing) SQL;  -- SQL代替为要分析的SQL  </span><br><span class="line">rollback;  </span><br></pre></td></tr></table></figure><h3 id="空闲连接"><a href="#空闲连接" class="headerlink" title="空闲连接"></a>空闲连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from pg_stat_activity</span><br><span class="line">where usename=&#x27;datalink&#x27;</span><br><span class="line">and state=&#x27;idle&#x27;</span><br><span class="line">order by query_start</span><br></pre></td></tr></table></figure><h3 id="表大小前一百个（包含索引）"><a href="#表大小前一百个（包含索引）" class="headerlink" title="表大小前一百个（包含索引）"></a>表大小前一百个（包含索引）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">WITH bloat AS (</span><br><span class="line">WITH t1 AS (</span><br><span class="line">SELECT</span><br><span class="line">schemaname,</span><br><span class="line">tablename,</span><br><span class="line">( 23 + CEIL ( COUNT ( * ) &gt;&gt; 3 ) ) :: BIGINT nullheader,</span><br><span class="line">MAX ( null_frac ) nullfrac,</span><br><span class="line">CEIL ( SUM ( ( 1 - null_frac ) * avg_width ) ) :: BIGINT datawidth </span><br><span class="line">FROM</span><br><span class="line">pg_stats </span><br><span class="line">GROUP BY</span><br><span class="line">schemaname,</span><br><span class="line">tablename </span><br><span class="line">),</span><br><span class="line">t2 AS (</span><br><span class="line">SELECT</span><br><span class="line">schemaname,</span><br><span class="line">tablename,</span><br><span class="line">( datawidth + 8 - ( CASE WHEN datawidth % 8 = 0 THEN 8 ELSE datawidth % 8 END ) ) -- avg data len</span><br><span class="line">+ ( 1 - nullfrac ) * 24 + nullfrac * ( nullheader + 8 - ( CASE WHEN nullheader % 8 = 0 THEN 8 ELSE nullheader % 8 END ) ) avgtuplelen </span><br><span class="line">FROM</span><br><span class="line">t1 </span><br><span class="line">) SELECT C</span><br><span class="line">.oid,</span><br><span class="line">avgtuplelen</span><br><span class="line">FROM</span><br><span class="line">t2 T,</span><br><span class="line">pg_class C,</span><br><span class="line">pg_namespace n </span><br><span class="line">WHERE</span><br><span class="line">T.schemaname = n.nspname </span><br><span class="line">AND C.relname = T.tablename </span><br><span class="line">AND C.relnamespace = n.oid </span><br><span class="line">AND relpages &gt; 100 </span><br><span class="line">),</span><br><span class="line">parti AS (</span><br><span class="line">SELECT</span><br><span class="line">parti.inhparent,</span><br><span class="line">parti.inhrelid,</span><br><span class="line">stat.n_dead_tup,</span><br><span class="line">c.relpages,</span><br><span class="line">c.reltuples</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">inhparent,</span><br><span class="line">inhrelid</span><br><span class="line">FROM</span><br><span class="line">pg_inherits inh UNION ALL</span><br><span class="line">( SELECT b.inhparent AS grandpa, A.inhrelid me FROM pg_inherits A INNER JOIN pg_inherits b ON A.inhparent = b.inhrelid ) </span><br><span class="line">) AS parti</span><br><span class="line">inner join pg_class c on parti.inhrelid = c.oid</span><br><span class="line">LEFT JOIN pg_stat_user_tables stat ON parti.inhrelid = stat.relid </span><br><span class="line">) SELECT</span><br><span class="line"> n.nspname &quot;tableSchema&quot;,</span><br><span class="line">C.relname &quot;tableName&quot;,</span><br><span class="line">SUM ( pg_total_relation_size ( COALESCE ( parti1.inhrelid, C.oid ) ) ) AS &quot;tableSize&quot;, --表及其子分区、索引大小，包含索引</span><br><span class="line">round(</span><br><span class="line">SUM ( pg_total_relation_size ( COALESCE ( parti1.inhrelid, C.oid ) ) ) / ( SELECT SUM ( pg_database_size ( datname ) ) AS dbsize FROM pg_database ),</span><br><span class="line">4 </span><br><span class="line">) AS tblpercent,-- 表占数据文件比例 </span><br><span class="line">COALESCE ( MAX ( c.reltuples ), 0 ) + COALESCE ( SUM ( COALESCE ( parti1.reltuples, 0 ) ), 0 ) AS &quot;tableRows&quot;,</span><br><span class="line">CASE</span><br><span class="line">WHEN (coalesce(max( bloat.avgtuplelen), 0) = 0  and coalesce(avg( parti1.avgtuplelen), 0) = 0) or  MAX ( COALESCE (c.relpages , 0 ) ) + SUM ( COALESCE ( parti1.relpages, 0 ))  = 0 THEN</span><br><span class="line">0 ELSE  </span><br><span class="line">round((1 - CEIL ( (MAX ( COALESCE ( c.reltuples, 0 ))  + SUM ( COALESCE ( parti1.reltuples, 0 ))) * </span><br><span class="line">(case when max( parti1.avgtuplelen) is not null then AVG( parti1.avgtuplelen)  else max ( COALESCE ( bloat.avgtuplelen, 0 ) ) end  ) / 8168) / </span><br><span class="line">(  MAX ( COALESCE (c.relpages , 0 ) ) + SUM ( COALESCE ( parti1.relpages, 0 )) ))::NUMERIC, 2)</span><br><span class="line">END AS bloat_pct,</span><br><span class="line">COALESCE ( MAX ( stat.n_dead_tup ), 0 ) + COALESCE ( SUM ( COALESCE ( parti1.n_dead_tup, 0 ) ), 0 ) AS &quot;deadTup&quot; --表内死数据行</span><br><span class="line">FROM</span><br><span class="line">pg_class</span><br><span class="line">C INNER JOIN pg_namespace n ON C.relnamespace = n.oid</span><br><span class="line">LEFT JOIN pg_stat_user_tables stat ON C.oid = stat.relid</span><br><span class="line">LEFT JOIN (select p.*, b.* from parti p left join bloat as b  ON p.inhrelid = b.oid) as parti1 on c.oid = parti1.inhparent</span><br><span class="line">LEFT JOIN bloat ON C.oid = bloat.oid </span><br><span class="line">WHERE</span><br><span class="line">n.nspname NOT IN ( &#x27;pg_catalog&#x27;, &#x27;information_schema&#x27; ) </span><br><span class="line">AND n.nspname !~ &#x27;^pg_toast&#x27; </span><br><span class="line">AND C.relkind IN ( &#x27;r&#x27;, &#x27;p&#x27; ) </span><br><span class="line">AND C.oid NOT IN ( SELECT inhrelid FROM pg_inherits ) </span><br><span class="line">GROUP BY</span><br><span class="line">C.relname,</span><br><span class="line">n.nspname </span><br><span class="line">ORDER BY</span><br><span class="line">&quot;tableSize&quot; DESC limit 100</span><br></pre></td></tr></table></figure><p>–查看表记录数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select relname as 表名, reltuples as 记录数 </span><br><span class="line">from pg_class </span><br><span class="line">where relkind = &#x27;r&#x27; </span><br><span class="line">and relnamespace = (select oid from pg_namespace where nspname=&#x27;base&#x27;) order by 记录数 desc;</span><br></pre></td></tr></table></figure><h3 id="查看schema大小"><a href="#查看schema大小" class="headerlink" title="查看schema大小"></a>查看schema大小</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">SELECT &quot;tableSchema&quot; as &quot;column&quot;,   --schemanamen </span><br><span class="line"> sum(&quot;tableSize&quot;) / 1024 / 1024 &quot;schemaSize&quot; --schema大小</span><br><span class="line"> FROM ( WITH bloat AS (</span><br><span class="line">WITH t1 AS (</span><br><span class="line">SELECT</span><br><span class="line">schemaname,</span><br><span class="line">tablename,</span><br><span class="line">( 23 + CEIL ( COUNT ( * ) &gt;&gt; 3 ) ) :: BIGINT nullheader,</span><br><span class="line">MAX ( null_frac ) nullfrac,</span><br><span class="line">CEIL ( SUM ( ( 1 - null_frac ) * avg_width ) ) :: BIGINT datawidth </span><br><span class="line">FROM</span><br><span class="line">pg_stats </span><br><span class="line">GROUP BY</span><br><span class="line">schemaname,</span><br><span class="line">tablename </span><br><span class="line">),</span><br><span class="line">t2 AS (</span><br><span class="line">SELECT</span><br><span class="line">schemaname,</span><br><span class="line">tablename,</span><br><span class="line">( datawidth + 8 - ( CASE WHEN datawidth % 8 = 0 THEN 8 ELSE datawidth % 8 END ) ) -- avg data len</span><br><span class="line">+ ( 1 - nullfrac ) * 24 + nullfrac * ( nullheader + 8 - ( CASE WHEN nullheader % 8 = 0 THEN 8 ELSE nullheader % 8 END ) ) avgtuplelen </span><br><span class="line">FROM</span><br><span class="line">t1 </span><br><span class="line">) SELECT C</span><br><span class="line">.oid,</span><br><span class="line">avgtuplelen</span><br><span class="line">FROM</span><br><span class="line">t2 T,</span><br><span class="line">pg_class C,</span><br><span class="line">pg_namespace n </span><br><span class="line">WHERE</span><br><span class="line">T.schemaname = n.nspname </span><br><span class="line">AND C.relname = T.tablename </span><br><span class="line">AND C.relnamespace = n.oid </span><br><span class="line">AND relpages &gt; 100 </span><br><span class="line">),</span><br><span class="line">parti AS (</span><br><span class="line">SELECT</span><br><span class="line">parti.inhparent,</span><br><span class="line">parti.inhrelid,</span><br><span class="line">stat.n_dead_tup,</span><br><span class="line">c.relpages,</span><br><span class="line">c.reltuples</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">inhparent,</span><br><span class="line">inhrelid</span><br><span class="line">FROM</span><br><span class="line">pg_inherits inh UNION ALL</span><br><span class="line">( SELECT b.inhparent AS grandpa, A.inhrelid me FROM pg_inherits A INNER JOIN pg_inherits b ON A.inhparent = b.inhrelid ) </span><br><span class="line">) AS parti</span><br><span class="line">inner join pg_class c on parti.inhrelid = c.oid</span><br><span class="line">LEFT JOIN pg_stat_user_tables stat ON parti.inhrelid = stat.relid </span><br><span class="line">) SELECT</span><br><span class="line"> n.nspname &quot;tableSchema&quot;,</span><br><span class="line">C.relname &quot;tableName&quot;,</span><br><span class="line">SUM ( pg_total_relation_size ( COALESCE ( parti1.inhrelid, C.oid ) ) ) AS &quot;tableSize&quot;, --表及其子分区、索引大小，包含索引</span><br><span class="line">round(</span><br><span class="line">SUM ( pg_total_relation_size ( COALESCE ( parti1.inhrelid, C.oid ) ) ) / ( SELECT SUM ( pg_database_size ( datname ) ) AS dbsize FROM pg_database ),</span><br><span class="line">4 </span><br><span class="line">) AS tblpercent,-- 表占数据文件比例 </span><br><span class="line">COALESCE ( MAX ( c.reltuples ), 0 ) + COALESCE ( SUM ( COALESCE ( parti1.reltuples, 0 ) ), 0 ) AS &quot;tableRows&quot;,</span><br><span class="line">CASE</span><br><span class="line">WHEN (coalesce(max( bloat.avgtuplelen), 0) = 0  and coalesce(avg( parti1.avgtuplelen), 0) = 0) or  MAX ( COALESCE (c.relpages , 0 ) ) + SUM ( COALESCE ( parti1.relpages, 0 ))  = 0 THEN</span><br><span class="line">0 ELSE  </span><br><span class="line">round((1 - CEIL ( (MAX ( COALESCE ( c.reltuples, 0 ))  + SUM ( COALESCE ( parti1.reltuples, 0 ))) * </span><br><span class="line">(case when max( parti1.avgtuplelen) is not null then AVG( parti1.avgtuplelen)  else max ( COALESCE ( bloat.avgtuplelen, 0 ) ) end  ) / 8168) / </span><br><span class="line">(  MAX ( COALESCE (c.relpages , 0 ) ) + SUM ( COALESCE ( parti1.relpages, 0 )) ))::NUMERIC, 2)</span><br><span class="line">END AS bloat_pct,</span><br><span class="line">COALESCE ( MAX ( stat.n_dead_tup ), 0 ) + COALESCE ( SUM ( COALESCE ( parti1.n_dead_tup, 0 ) ), 0 ) AS &quot;deadTup&quot; --表内死数据行</span><br><span class="line">FROM</span><br><span class="line">pg_class</span><br><span class="line">C INNER JOIN pg_namespace n ON C.relnamespace = n.oid</span><br><span class="line">LEFT JOIN pg_stat_user_tables stat ON C.oid = stat.relid</span><br><span class="line">LEFT JOIN (select p.*, b.* from parti p left join bloat as b  ON p.inhrelid = b.oid) as parti1 on c.oid = parti1.inhparent</span><br><span class="line">LEFT JOIN bloat ON C.oid = bloat.oid </span><br><span class="line">WHERE</span><br><span class="line">n.nspname NOT IN ( &#x27;pg_catalog&#x27;, &#x27;information_schema&#x27; ) </span><br><span class="line">AND n.nspname !~ &#x27;^pg_toast&#x27; </span><br><span class="line">AND C.relkind IN ( &#x27;r&#x27;, &#x27;p&#x27; ) </span><br><span class="line">AND C.oid NOT IN ( SELECT inhrelid FROM pg_inherits ) </span><br><span class="line">GROUP BY</span><br><span class="line">C.relname,</span><br><span class="line">n.nspname </span><br><span class="line">ORDER BY</span><br><span class="line">&quot;tableSize&quot; DESC</span><br><span class="line"> ) as foo group by &quot;tableSchema&quot; order by &quot;schemaSize&quot; desc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术类文章 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>欢迎来到我的博客</title>
      <link href="/2024/07/06/hello-world/"/>
      <url>/2024/07/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
